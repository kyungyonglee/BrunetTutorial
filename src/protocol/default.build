<?xml version="1.0"?>

<project name="Brunet" default="build">
  <property name="assembly" value="Brunet"/>
  <property name="build.dir" value="build"/>
  <property name="lib.dir" value="../../lib"/>
  <property name="build.define" value="TRACE"/>
  <property name="build.debug" value="false"/>
  <property name="last.nunit" value=""/>
  <property name="last.build" value=""/>

  <target name="test" description="Makes a NUnit2 testable build">
    <if test="${last.nunit != 'test'}">
      <delete file="${build.dir}/${assembly}.Test.dll" failonerror="false" />
      <property name="last.nunit" value="test"/>
    </if>

    <mkdir dir="${build.dir}" failonerror="true"/>

    <csc target="library" define="BRUNET_NUNIT" output="${build.dir}/${assembly}.Test.dll">
      <sources failonempty="true">
        <include name="Util/*.cs"/>
        <include name="Transport/*.cs"/>
        <include name="*.cs"/>
      </sources>
      <references>
        <include name="${lib.dir}/NUnit.Framework.dll" />
      </references>
    </csc>

    <copy todir="${lib.dir}">
      <fileset basedir="${build.dir}">
          <include name="${assembly}.Test.dll" />
       </fileset>
    </copy>
  </target>

  <target name="nunit_test" description="Builds nunit testable Brunet.dll">
    <if test="${last.nunit != 'nunit_test'}">
      <delete file="${build.dir}/${assembly}.Test.dll" failonerror="false" />
      <property name="last.nunit" value="nunit_test"/>
    </if>

    <mkdir dir="${build.dir}" failonerror="true"/>

    <csc target="library" define="BRUNET_NUNIT" optimize="true" output="${build.dir}/${assembly}.Test.dll">
      <sources>
        <include name="*.cs"/>
        <include name="Util/*.cs"/>
        <include name="Transport/*.cs"/>
      </sources>
      <references basedir="${build.dir}">
        <include name="nunit.framework.dll" />
      </references>
    </csc>
    <nunit2>
      <formatter type="Plain" />
      <test assemblyname="${build.dir}/${assembly}.Test.dll"/>
    </nunit2>
  </target>

  <target name="build_brunet">
    <mkdir dir="${build.dir}" failonerror="true"/>

    <csc target="library" debug="${build.debug}" define="${build.define}" optimize="true" output="${build.dir}/${assembly}.dll">
      <sources failonempty="true">
        <include name="*.cs"/>
        <include name="Util/*.cs"/>
        <include name="Transport/*.cs"/>
      </sources>
    </csc>

    <copy todir="${lib.dir}">
       <fileset basedir="${build.dir}">
          <include name="${assembly}.dll" />
       </fileset>
    </copy>
  </target>

  <target name="build" description="Builds the current configuration">
    <if test="${last.build != 'build_brunet'}">
      <delete file="${build.dir}/${assembly}.dll" failonerror="false" />
      <property name="last.build" value="build_brunet"/>
    </if>

    <call target="build_brunet"/>
  </target>

  <target name="simulator" description="Builds a Brunet Simulator!">
    <if test="${last.build != 'simulator'}">
      <delete file="${build.dir}/${assembly}.dll" failonerror="false" />
      <property name="last.build" value="simulator"/>
    </if>

    <property name="build.define" value="${build.define},BRUNET_SIMULATOR"/>
    <call target="build_brunet"/>
  </target>

  <target name="clean" description="Deletes all the configurations">
    <delete dir="${build.dir}" failonerror="false"/>
  </target>
</project>
