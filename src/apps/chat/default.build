<?xml version="1.0"?>

<project
  name="Brunet"
  default="build">

  <!-- default configuration -->
  <property
    name="project.version"
    value="0.1"/>
  <property
    name="package.name"
    value="${nant.project.name}-${project.version}"/>
  <property
    name="build.dir"
    value="../../../build"/>
  <property
    name="lib.dir"
    value="../../../lib"/>
  <property
    name="assembly"
    value="Brunet"/>
  <property
    name="project.config"
    value="release"/> <!-- debug|release -->
  <property
    name="target"
    value="build"/>
  <property
    name="nunit"
    value="nunit-console"/> 
  <property
    name="gtk.dir"
    value="/usr/lib/mono/gtk-sharp/"/>

  <!-- named configurations -->
  <target
    name="init"
    description="Initializes build properties">
    <call target="${project.config}"/>
  </target>

  <target
    name="debug"
    description="Configures a debug build">
    <property
      name="project.config"
      value="debug"/>
    <property
      name="build.debug"
      value="true"/>
    <property
      name="package.name"
      value="${nant.project.name}-${project.config}"/>
  </target>

  <target
    name="release"
    description="Configures a release build">
    <property
      name="project.config"
      value="release"/>
    <property
      name="build.debug"
      value="false"/>
  </target>

  <target
    name="build"
    depends="init"
    description="Builds the current configuration">

    <!-- copy libraries -->
    <copy todir="${build.dir}/${package.name}/bin">
       <fileset basedir="${lib.dir}">
          <include name="${assembly}.dll" />
          <include name="NUnit.Framework.dll" />
          <include name="log4net.dll" />
          <include name="logconfig.xml" />
       </fileset>
    </copy>

    <!-- copy config files -->
    <copy todir="${build.dir}/${package.name}/bin">
       <fileset>
          <include name="BrunetChat.glade" />
          <include name="LocalTcpPort.xml" />
          <include name="Buddylist.xml" />
          <include name="RemoteTransportAddresses.xml" />
          <include name="ucla_net_logo.png" />
          <include name="Users.xml"/>
       </fileset>
    </copy>

    <csc
      target="exe"
      debug="${build.debug}"
      output="${build.dir}/${package.name}/bin/${assembly}ChatMain.exe"
      doc="${build.dir}/${package.name}/bin/${assembly}.xml">
      <sources failonempty="true">
        <include name="*.cs"/>
      </sources>
      <references>
        <include name="${lib.dir}/${assembly}.dll" />
        <include name="${lib.dir}/log4net.dll" />
      </references>
      <pkg-references>
         <package name="gtk-sharp-2.0"/>
         <package name="glade-sharp-2.0"/>
      </pkg-references>
      <!--
        This is the way we should be able to use pkg-config
	to get the locations of the dlls we need, however,
	this is not working in my version of Nant.
      <pkg-references>
        <package name="gtk-sharp" />
      </pkg-references>
      -->
      <resources dynamicprefix="true" basedir=".">
         <include name="BrunetChat.glade" />
      </resources>
    </csc>
  </target>

  <target name="dualclient"
    depends="build"
    description="Creates a second client for testing">
    <!-- copy libraries -->
    <copy todir="${build.dir}/${package.name}/bin2">
       <fileset basedir="${lib.dir}">
          <include name="${assembly}.dll" />
          <include name="NUnit.Framework.dll" />
          <include name="log4net.dll" />
          <include name="logconfig.xml" />
       </fileset>
    </copy>
    
    <!-- copy config files -->
    <copy todir="${build.dir}/${package.name}/bin2">
       <fileset>
          <include name="BrunetChat.glade" />
          <include name="ucla_net_logo.png" />
       </fileset>
    </copy>


    <copy file="${build.dir}/${package.name}/bin/BrunetChatMain.exe"
       tofile="${build.dir}/${package.name}/bin2/BrunetChatMain.exe" />
    <copy file="LocalTcpPort2.xml"
       tofile="${build.dir}/${package.name}/bin2/LocalTcpPort.xml" />
    <copy file="RemoteTransportAddresses2.xml" 
       tofile="${build.dir}/${package.name}/bin2/RemoteTransportAddresses.xml" />
    <copy file="Buddylist.xml" 
       tofile="${build.dir}/${package.name}/bin2/Buddylist.xml" />
          
  </target>

  <target name="clean"
    depends="init"
    description="Deletes the current configuration">
    <delete
      dir="${build.dir}/${package.name}"
      failonerror="false"/>
  </target>

  <target
    name="clean-all"
    description="Deletes all the configurations">
    <delete
      dir="${build.dir}"
      failonerror="false"/>
  </target>

</project>
