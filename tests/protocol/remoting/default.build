<?xml version="1.0"?>

<project
  name="Brunet"
  default="build">

  <!-- default configuration -->
  <property
    name="project.version"
    value="0.1"/>
  <property
    name="package.name"
    value="${nant.project.name}-${project.version}"/>
  <property
    name="build.dir"
    value="../../../build"/>
  <property
    name="lib.dir"
    value="../../../lib"/>
  <property
    name="assembly"
    value="Brunet"/>
  <property
    name="project.config"
    value="release"/> <!-- debug|release -->
  <property
    name="target"
    value="build"/>
  <property
    name="nunit"
    value="nunit-console"/> 

  <!-- named configurations -->
  <target
    name="init"
    description="Initializes build properties">
    <call target="${project.config}"/>
  </target>

  <target
    name="debug"
    description="Configures a debug build">
    <property
      name="project.config"
      value="debug"/>
    <property
      name="build.debug"
      value="true"/>
    <property
      name="package.name"
      value="${nant.project.name}-${project.config}"/>
  </target>

  <target
    name="release"
    description="Configures a release build">
    <property
      name="project.config"
      value="release"/>
    <property
      name="build.debug"
      value="false"/>
  </target>

  <target
    name="build"
    depends="init"
    description="Builds the current configuration">

    <!-- copy libraries -->
    <copy todir="${build.dir}/${package.name}/bin">
       <fileset basedir="${lib.dir}">
          <include name="${assembly}.dll" />
          <include name="NUnit.Framework.dll" />
          <include name="log4net.dll" />
          <include name="logconfig.xml" />
       </fileset>
    </copy>

    <csc
      target="library"
      debug="${build.debug}"
      output="RemotingTester.dll">
      <sources failonempty="true">
        <include name="RemotingTester.cs"/>
      </sources>
      <references>
        <include name="${lib.dir}/${assembly}.dll" />
        <include name="${lib.dir}/${assembly}-TestUtil.dll" />
        <include name="/usr/share/dotnet/mono/1.0/Mono.Posix.dll" />
      </references>
    </csc>

    <csc
      target="library"
      debug="${build.debug}"
      output="BrunetRemoteObject.dll">
      <sources failonempty="true">
        <include name="BrunetRemoteObject.cs"/>
      </sources>
      <references>
        <include name="${lib.dir}/${assembly}.dll" />
        <include name="${lib.dir}/${assembly}-TestUtil.dll" />
        <include name="RemotingTester.dll" />
      </references>
    </csc>


    <csc
      target="library"
      debug="${build.debug}"
      output="RemoteObjectFactory.dll">
      <sources failonempty="true">
        <include name="RemoteObjectFactory.cs"/>
      </sources>
      <references>
        <include name="BrunetRemoteObject.dll" />
        <include name="RemoteObject.dll" />
      </references>
    </csc>

    <csc
      target="exe"
      debug="${build.debug}"
      output="RemotingClient.exe">
      <sources failonempty="true">
        <include name="RemotingClient.cs"/>
      </sources>
      <references>
        <include name="System.Runtime.Remoting.dll" />
        <include name="${lib.dir}/${assembly}.dll" />
        <include name="${lib.dir}/${assembly}-TestUtil.dll" />
        <include name="RemotingTester.dll" />
        <include name="RemoteObject.dll" />
        <include name="BrunetRemoteObject.dll" />
        <include name="RemoteObjectFactory.dll" />  
      </references>
    </csc>

    <csc
      target="exe"
      debug="${build.debug}"
      output="RemotingHost.exe">
      <sources failonempty="true">
        <include name="RemotingHost.cs"/>
      </sources>
      <references>
        <include name="System.Runtime.Remoting.dll" />
        <include name="${lib.dir}/${assembly}.dll" />
        <include name="${lib.dir}/${assembly}-TestUtil.dll" />
        <include name="RemotingTester.dll" />
        <include name="RemoteObject.dll" />
        <include name="BrunetRemoteObject.dll" />
        <include name="RemoteObjectFactory.dll" />  
      </references>
    </csc>

  </target>

  <target name="clean"
    depends="init"
    description="Deletes the current configuration">
    <delete
      dir="${build.dir}/${package.name}"
      failonerror="false"/>
  </target>

  <target
    name="clean-all"
    description="Deletes all the configurations">
    <delete
      dir="${build.dir}"
      failonerror="false"/>
  </target>

</project>

